name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: airflow
          POSTGRES_PASSWORD: airflow
          POSTGRES_DB: airflow
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U airflow"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7.2-bookworm
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install extra dev dependencies (optional)
        run: |
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run code lint checks
        run: make lint

      - name: Run tests
        run: make test

      - name: Run pre-commit hooks
        run: |
          pre-commit install
          pre-commit run --all-files

      - name: Create .env file for Docker Compose
        run: |
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> airflow/.env
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> airflow/.env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> airflow/.env
            echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> airflow/.env
            echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> airflow/.env
            echo "ECR_REPO_NAME=${{ secrets.ECR_REPO_NAME }}" >> airflow/.env
            echo "AIRFLOW_UID=1000" >> airflow/.env

      - name: Build Airflow Docker image
        run: |
          docker compose --env-file airflow/.env --project-directory airflow build

      - name: Check Airflow Docker image built
        run: docker images | grep airflow || echo "Airflow image not found!"
